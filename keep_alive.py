from flask import Flask, request, jsonify
import threading
import asyncio
import logging
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask('')

@app.route('/')
def home():
    return "Telegram Bot is running!"

@app.route('/health')
def health():
    return "OK"

@app.route('/webhook', methods=['POST'])
async def webhook():
    """Endpoint –¥–ª—è webhook –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram"""
    try:
        from bot import webhook_handler
        return await webhook_handler(request)
    except Exception as e:
        logger.error(f"Error in webhook: {e}")
        return jsonify({"status": "error"}), 500

@app.route('/set_webhook', methods=['GET'])
async def set_webhook():
    """–†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)"""
    try:
        from telegram import Bot
        
        bot_token = os.getenv('BOT_TOKEN')
        render_external_url = os.getenv('RENDER_EXTERNAL_URL')
        
        if not bot_token or not render_external_url:
            return "‚ùå BOT_TOKEN –∏–ª–∏ RENDER_EXTERNAL_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        
        bot = Bot(token=bot_token)
        webhook_url = f"{render_external_url}/webhook"
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π
        await bot.delete_webhook()
        result = await bot.set_webhook(
            url=webhook_url,
            allowed_updates=["message", "callback_query"],
            drop_pending_updates=True
        )
        
        return f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}<br>–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}"
        
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}"

def run():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Flask —Å–µ—Ä–≤–µ—Ä"""
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    t = threading.Thread(target=run)
    t.daemon = True
    t.start()
    logger.info("üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
